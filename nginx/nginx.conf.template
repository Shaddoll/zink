events {}

stream {
    map $ssl_preread_server_name $name {
        trojan.${DOMAIN_NAME} trojan;
        default web;
    }

    upstream trojan {
        server trojan:443;
    }

    upstream web {
        server 127.0.0.1:4430;
    }

    server {
        listen 443 reuseport;

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        proxy_pass $name;
        ssl_preread on;
    }
}

http {
    upstream zink-web {
        server zink-web:3000;
    }

    upstream zink-api {
        server zink-api:8000;
    }

    upstream waline {
        server waline:8360;
    }

    upstream chatgpt-next-web {
        server chatgpt-next-web:3000;
    }

    upstream srt-generator {
        server srt-generator:5000;
    }

    server {
        listen 80;
        server_name ${DOMAIN_NAME} www.${DOMAIN_NAME} mail.${DOMAIN_NAME} chatgpt.${DOMAIN_NAME} trojan.${DOMAIN_NAME} srt.${DOMAIN_NAME} ${BLOB_DOMAIN_NAME};

        # Serve Certbot challenges
        location /.well-known/acme-challenge/ {
            root /var/www/certbot/;
        }

        # Redirect all other HTTP requests to HTTPS
        location / {
            if ($host = mail.${DOMAIN_NAME}) {
                return 404;
            }
            if ($host = chatgpt.${DOMAIN_NAME}) {
                return 404;
            }
            if ($host = trojan.${DOMAIN_NAME}) {
                return 404;
            }
            if ($host = srt.${DOMAIN_NAME}) {
                return 404;
            }
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 4430 ssl;
        server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            proxy_pass http://zink-web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /ws {
            proxy_pass http://zink-api/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /waline/ {
            proxy_pass http://waline/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 4430 ssl;
        server_name chatgpt.${DOMAIN_NAME};

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            proxy_pass http://chatgpt-next-web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 4430 ssl;
        server_name srt.${DOMAIN_NAME};

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            proxy_pass http://srt-generator;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 4430 ssl;
        server_name ${BLOB_DOMAIN_NAME};

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            alias /var/www/blobs/;
            autoindex off;
            # Return 403 for directory access and non-existent files
            try_files $uri $uri/ =403;
        }
    }

    server {
        listen 80 default_server;
        server_name _;

        # Return a 404 for unmatched domains
        return 404;
    }

    server {
        listen 4430 ssl default_server;
        server_name _;

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        # Serve a default response or error page
        return 404;
    }
}
